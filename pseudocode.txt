pseudocode for total.



class Line_Set
    내부 데이터들 넣어주기.
    스스로 아예 init이 가능하도록?
    내부에 함수들을 다 끼워버릴까?


기본 main.

    reference_list = get_references_from_file()



    for data_file
        for data_read
            find_gene()

        for line_set,
            count_indel_type()

        line_set.sort(length(line_set))

        for gene
            make_log()
            for line_set
                if line_set_gene == gene:
                    print





find gene:
    for gene,
        make line_set:
            align
            find main indel
            find score
    비교 score



    find gene(align) -> find indel -> find score -> find



def main(){

    address_list = [file_name for file_name in os.listdir(DATA_ADDRESS)
                    if os.path.isfile(os.path.join(DATA_ADDRESS, file_name)) and file_name[-6:] == '.fastq']

    ref_raw_list = list(SeqIO.parse(REF_SET_ADDRESS, "fasta"))
    g_rna_seq_list = list(SeqIO.parse(GUIDE_RNA_SET_ADDRESS, "fasta"))


    g_rna_seq = read_g_rna(GUIDE_RNA_ADDRESS)

    # For each file, this will read, align and build the line set.
    # Also, the line set will be used to count the indels, and making the result.

    indel_count_total = {}

    for file_name in address_list:
        seq_raw_iter = SeqIO.parse(os.path.join(DATA_ADDRESS, file_name), "fastq")

        seq_raw_list = []
        for item in seq_raw_iter:
            seq_raw_list.append(item)

        print(f"for {file_name}:")
        line_set_list_dict = get_best_align_line_set_list_dict(ref_raw_list, seq_raw_list, g_rna_seq_list)

        # line_set = {name, (pos, ref, match, seq, phred)_line, indel_type, align_score, reason}

        indel_count_for_file_dict = get_indel_count_for_file_dict(line_set_list_dict)

        indel_count_total[file_name] = indel_count_for_file_dict

        write_gene_seq_log_for_file(file_name, line_set_list_dict, indel_count_for_file_dict)
        write_error_seq_log_for_file(file_name, line_set_list_dict, indel_count_for_file_dict)

    # write_result_main_log(indel_count_total)



}


